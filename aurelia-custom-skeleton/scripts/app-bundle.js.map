{"version":3,"sources":["services/registry.ts","environment.ts","boot.ts","main.ts","layouts/layout-main.ts","resources/index.ts","viewmodels/notfound.ts","viewmodels/home/welcome.ts","D:/Projects/aurelia-custom-skeleton/src/layouts/layout-main.html","D:/Projects/aurelia-custom-skeleton/src/viewmodels/notfound.html","D:/Projects/aurelia-custom-skeleton/src/viewmodels/home/welcome.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class Registry {\n\n    //#region Properties\n\n    values = {};\n\n    //#endregion\n\n    constructor() {\n    }\n\n    //#region Getter/Setter Methods\n\n    config(name = null) {\n        return this.values.hasOwnProperty(\"config\") ?\n            (name ? this.values[\"config\"][name] : this.values[\"config\"]) : null;\n    }\n\n    get(name) {\n        return this.values.hasOwnProperty(name) ? this.values[name] : null;\n    }\n\n    set(name, value) {\n        this.values[name] = value;\n    }\n\n    //#endregion\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","//#region import\n\nimport {Aurelia } from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\nimport {Registry} from './services/registry';\nimport environment from './environment';\n\n//#endregion\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n    warnings: {\n        wForgottenReturn: false\n    }\n});\n\nexport class Boot {\n\n    //#region Properties\n\n    registry: Registry;\n    aurelia: Aurelia;\n    config: any;\n\n    //#endregion\n\n    constructor() {\n    }\n\n    //#region Init+Start\n\n    init(aurelia: Aurelia) {\n        let t = this,\n            client = new HttpClient();\n        t.aurelia = aurelia;\n\n        t.aurelia.use\n            .standardConfiguration()\n            .feature('resources');\n\n        if (environment.debug) {\n            aurelia.use.developmentLogging();\n        }\n\n        if (environment.testing) {\n            aurelia.use.plugin('aurelia-testing');\n        }\n\n        t.registry = t.aurelia.container.get(Registry);\n\n        client\n            .get(\"config.app.json\")\n            .then(result => JSON.parse(result.response))\n            .then(config => {\n                client.get(config.apiBaseUrl + config.routeUrl)\n                    .then(r => {\n                        config.routes = t.updateRoutes(config, JSON.parse(r.response));\n                        t.registry.set(\"config\", config);\n                        t.start();\n                    })\n                    .catch(err => console.log(err));\n            })\n            .catch(err => console.log(err));\n    }\n\n    start() {\n        let t = this;\n        t.config = t.registry.config();\n\n        this.aurelia.start().then(a => a.setRoot(t.config.root));\n    }\n\n    //#endregion\n\n\n    //#region Route conversion/handler\n\n    updateRoutes(config, routes) {\n        let viewStrategy = config.viewStrategy;\n\n        for (let i = 0; i < routes.length; i++) {\n            switch (viewStrategy.viewModelResolve) {\n                default:\n                    break;\n                case \"customFolder\":\n                    routes[i].moduleId = `${viewStrategy.viewModelBasePath}${routes[i].moduleId}`;\n                    break;\n            }\n        }\n\n        return routes;\n    }\n\n    //#endregion\n}\n\n\n","//#region import\n\nimport 'jquery';\nimport 'bootstrap';\nimport {Boot} from './boot';\n\n//#endregion\n\nexport function configure(aurelia) {\n    let boot = new Boot();\n    boot.init(aurelia);\n};\n","//#region import\n\nimport {autoinject, useView} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\nimport {Redirect, AppRouter} from 'aurelia-router';\nimport {Registry} from '../services/registry';\n\n//#endregion\n\n@autoinject()\nexport class Layout {\n\n    //#region Properties\n\n    menus = [];\n    selectedRoute;\n    registry: Registry;\n    router: AppRouter;\n\n    //#endregion\n\n    constructor(registry: Registry) {\n        this.registry = registry;\n        this.registry.set(\"layout\", this);\n    }\n\n    //#region au events\n\n    attached() {\n    }\n\n    configureRouter(config, router) {\n        config.title = this.registry.config(\"title\");\n        config.options.pushState = this.registry.config(\"pushState\");\n        if (config.options.pushState === true)\n            config.options.root = '/';\n\n        let routes = this.registry.config(\"routes\");\n        let actualRoutes = routes.filter(item => {\n            return item.settings && item.settings.isRoute === true;\n        });\n\n        this.menus = routes.filter(item => {\n            return item.nav === true;\n        });\n\n        config.map(actualRoutes);\n\n        config.mapUnknownRoutes(\"viewmodels/notfound\");\n\n        let t = this;\n\n        var step = {\n            run: (navigationInstruction, next) => {\n                t.registry.set(\"currentRoute\", {\n                    'config': navigationInstruction.config,\n                    'params': navigationInstruction.params\n                });\n\n                t.selectedRoute = navigationInstruction.config;\n                return next();\n            }\n        };\n        config.addPreActivateStep(step);\n\n        this.router = router;\n    }\n\n    //#endregion\n\n}\n\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n    //config.globalResources([]);\n}\n","export class Notfound {\n\n}\n","export class Welcome {\n\n}\n",null,null,null],"sourceRoot":"..\\src"}